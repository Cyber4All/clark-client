name: Branching Strategy to automate Pull Requests

#Only runs when a pull request is closed
on:
  pull_request:
    types: [closed]
    branches:
      - releases

jobs:
  Action-Information:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Job was triggered by ${{ github.event_name }}."
      - run: echo "Current branch is ${{ github.ref }} in the ${{ github.repository }} repository."
      - run: echo "The job is being run on a ${{ runner.os }} server hosted by Github"

  PR-Action:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    env:
      HEAD: ${{ github.event.pull_request.head.ref }}
      TEAM_SLUG: developers
    steps:
      - name: set-env-vars
        run: |
          if [[ ${{ env.HEAD }} == "hotfix" ]]; then
            echo "PR_HEAD=hotfix" >> $GITHUB_ENV
            echo "PR_BASE=main" >> $GITHUB_ENV
            echo "PR_TITLE=Pull Request to Merge \`hotfix\` into \`main\`" >> $GITHUB_ENV
            echo "PR_BODY=This PR was triggered by the action of merging $HEAD into releases ** Review this PR before merging into main" >> $GITHUB_ENV
          else 
            echo "PR_HEAD=releases" >> $GITHUB_ENV
            echo "PR_BASE=hotfix" >> $GITHUB_ENV
            echo "PR_TITLE=Pull Request to Merge \`releases\` into \`hotfix\`" >> $GITHUB_ENV
            echo "PR_BODY=This PR was triggered by the action of merging $HEAD into releases ** Review this PR before merging into hotfix" >> $GITHUB_ENV
          fi

      - name: create-pr
        run: |
          CREATE_RES=$(curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.MACHINE_PAT }}" \
            https://api.github.com/repos/Cyber4All/${{ github.repository }}/pulls \
            -d '{"head":"'"$PR_HEAD"'","base":"'"$PR_BASE"'","title":"'"$PR_TITLE"'","body":"'"$PR_BODY"'"}')

          echo $CREATE_RES | jq -C

          if echo $CREATE_RES | jq -e 'has("message")' > /dev/null; then
            exit 1
          fi

          echo "URL=$(echo $CREATE_RES | jq -r '.url')" >> $GITHUB_ENV

      - name: request-reviewers
        run: |
          REVIEW_RES=$(curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.MACHINE_PAT }}" \
            "$URL/requested_reviewers" \
            -d '{"team_reviewers":["'"$TEAM_SLUG"'"]}')

          echo $REVIEW_RES | jq -C

          if echo $REVIEW_RES | jq -e 'has("message")' > /dev/null; then
            exit 1
          fi
