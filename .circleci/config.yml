defaults: &defaults
  working_directory: ~/clark-client
  docker:
    - image: cyber4all/circleci-aws:node-alpine

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Unit Tests
          command: npm run test:unit auth/ admin/ onion/dashboard/
      - run:
          name: Build Application
          command: yarn ng build --prod --no-progress
      - persist_to_workspace: 
          root: dist
          paths: 
            - ./
  publish-image:
    <<: *defaults
    docker:
      - image: circleci/node:9.8.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Image
          command: | 
            docker build -t clark-client:$CIRCLE_SHA1 .
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
      - run:
          name: Publish Image 
          command: |
            docker tag clark-client:$CIRCLE_SHA1 "${DOCKER_USER_ORG}/clark-client:${CIRCLE_SHA1}"
            docker push $DOCKER_USER_ORG/clark-client:$CIRCLE_SHA1
  lighthouse:
    <<: *defaults
    docker:
      - image: circleci/node:9.8.0-browsers
      - image: "${DOCKER_USER_ORG}/clark-client:${CIRCLE_SHA1}"
    steps:  
      - checkout
      - setup_remote_docker
      - run:
          name: Wait for client
          command: dockerize -wait http://localhost:4200 -timeout 3m
      - run:
          name: Run Lighthouse tests
          command: npm run test:lighthouse
  deploy:
    <<: *defaults
    steps:
      - attach_workspace : 
          at: ~/clark-client/dist
      - run: 
          name: Invalidate index.html in CloudFront
          command: aws cloudfront create-invalidation --distribution-id ${cloudfront_id} --paths /index.html
      - run:
          name: Deploy to S3 
          command: aws s3 sync ${source} s3://${s3_bucket} --region ${s3_region}
workflows:
  version: 2
  build-and-test:
    jobs:
      - publish-image
      - lighthouse:
          requires:
            - publish-image
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      - lighthouse:
          requires:
            - build
          filters:
            branches:
              only: /master/
      - deploy:
          requires:
            - lighthouse
          filters:
            branches:
              only: /master/
