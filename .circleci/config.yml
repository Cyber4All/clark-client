defaults: &defaults
  working_directory: ~/clark-client
  docker:
    - image: cyber4all/circleci-aws:debian
orbs:
  aws-cli: circleci/aws-cli@1.2.1
  docker: circleci/docker@1.4.0
commands:
  install-aws: aws-cli/install
  setup-aws-cli: aws-cli/setup
version: 2.1
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Build Application
          command: yarn ng build --prod --no-progress
      - persist_to_workspace: 
          root: dist
          paths: 
            - ./
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Unit Tests
          command: npm run test:unit
  publish-image:
    <<: *defaults
    docker:
      - image: circleci/node:10.13.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: Build Image
          command: |
            docker build -t clark-client:$CIRCLE_SHA1 .
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
      - run:
          name: Publish Image
          command: |
            docker tag clark-client:$CIRCLE_SHA1 "${DOCKER_USER_ORG}/clark-client:${CIRCLE_SHA1}"
            docker push $DOCKER_USER_ORG/clark-client:$CIRCLE_SHA1
  lighthouse:
    <<: *defaults
    docker:
      - image: circleci/node:10.13.0-browsers
      - image: "$DOCKER_USER_ORG/clark-client:${CIRCLE_SHA1}"
    steps:  
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: Wait for client
          command: dockerize -wait http://localhost:80 -timeout 3m
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Run Lighthouse tests
          command: npm run test:lighthouse
  deploy:
    <<: *defaults
    steps:
      - attach_workspace : 
          at: ~/clark-client/dist
      - checkout
      - setup-aws-cli:
          aws-access-key-id: AWS_CF_AccessKey
          aws-region: AWS_REGION_N_VA
          aws-secret-access-key: AWS_CF_SecretKey
          version: "1"
      - run:
          name: Deploy to S3 
          command: aws s3 sync ${source} s3://${s3_bucket} --region ${s3_region}
      - run: 
          name: Invalidate index.html in CloudFront
          command: aws cloudfront create-invalidation --distribution-id ${cloudfront_id} --paths /index.html
      
workflows:
  version: 2.1
  build-and-test:
    jobs:
      - build:
          filters:
            branches:
              ignore: /master/
      - test:
          filters:
            branches:
              ignore: /master/
      - publish-image:
          requires:
            - build
          context: 
            - DockerHub
          filters:
            branches:
              ignore: /master/
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      - test:
          requires:
            - build
          filters:
            branches:
              only: /master/
      - publish-image:
          requires:
            - test
          context: 
            - DockerHub
          filters:
            branches:
              only: /master/
      - lighthouse:
          requires:
            - publish-image
          context: 
            - DockerHub
          filters:
            branches:
              only: /master/
      - deploy:
          requires:
            - lighthouse
          context: 
            - DockerHub
            - AWS
          filters:
            branches:
              only: /master/
