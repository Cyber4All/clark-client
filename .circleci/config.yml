version: 2.1

orbs:
  node: circleci/node@5.0.0
  aws-cli: circleci/aws-cli@2.0.3
  docker: circleci/docker@2.0.1

commands:
  install-aws: aws-cli/install
  setup-aws-cli: aws-cli/setup

jobs:
  build:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Build Application
          command: yarn ng build --configuration production --no-progress
      - persist_to_workspace: 
          root: dist
          paths: 
            - ./

  lighthouse:
    docker:
      - image: "cyber4all/clark-client:${CIRCLE_SHA1}"
    steps:  
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for client
          command: dockerize -wait http://localhost:80 -timeout 3m
      - node/install:
          node-version: "16.13.2"
      - run:
          name: Clark lighthouse Tests
          command: npm run test:lighthouse

  publish-image:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
      - docker/build:
          image: "cyber4all/clark-client"
      - docker/push:
          image: "cyber4all/clark-client"

  deploy:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - attach_workspace : 
          at: ~/clark-client/dist
      - setup-aws-cli:
          aws-access-key-id: AWS_CF_AccessKey
          aws-region: AWS_REGION_N_VA
          aws-secret-access-key: AWS_CF_SecretKey
          version: "1"
      - run:
          name: Deploy to S3 
          command: aws s3 sync ./dist s3://${s3_bucket} --region ${s3_region}
      - run: 
          name: Invalidate index.html in CloudFront
          command: aws cloudfront create-invalidation --distribution-id ${cloudfront_id} --paths /index.html
      
workflows:
  version: 2.1
  build-and-test:
    jobs:
      - build:
        filters:
            branches:
              ignore: /master/
      - node/test:
          run-command: "test:unit"
          version: "16.13.2"
          filters:
            branches:
              ignore: /master/
  build-test-and-deploy:
    jobs:
      - node/test:
          run-command: "test:unit"
          version: "16.13.2"
          filters:
            branches:
              only: /master/
      - publish-image:
          context: 
            - DockerHub
          filters:
            branches:
              only: /master/
      - lighthouse:
          requires:
            - publish-image
          context: 
            - DockerHub
          filters:
            branches:
              only: /master/
      - build:
          requires:
            - node/test
            - lighthouse
          filters:
            branches:
              only: /master/
      - deploy:
          requires:
            - build
          context: 
            - DockerHub
            - AWS
          filters:
            branches:
              only: /master/
